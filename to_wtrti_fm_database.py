import json
import glob
import csv
import wt_datamine

# Каталог откуда считываем основные модели
root_dir = '.\\War-Thunder-Datamine-master\\'
lang_dir = f'{root_dir}\\lang.vromfs.bin_u\\lang\\'
flightmodels_path = f'{root_dir}\\aces.vromfs.bin_u\\gamedata\\flightmodels\\'
# \War-Thunder-Datamine-master\lang.vromfs.bin_u\lang\units.csv
# Список самолетов который нам интересен, если пусто, то обработаем все
list_plane = [
    'a-20g',
    'a-26b',
    'a-26b_10',
    'a-26c-45-dt',
    'a-26c',
    'a-35b',
    'a2d',
    'a5m4',
    'a5m4_hagiri',
    'a6m2_mod11',
    'a6m2_n_zero',
    'a6m2_zero',
    'a6m2_zero_china',
    'a6m2_zero_usa',
    'a6m3_mod22_zero',
    'a6m3_mod22ko_zero',
    'a6m3_zero',
    'a6m5_zero',
    'a6m5_zero_china',
    'a6m5hei',
    'a6m5ko',
    'a6m5otsu',
    'a6m6c',
    'a7he1',
    'a7m1',
    'a7m2',
    'a_109_eoa2',
    'a_10a_early',
    'a_10a_late',
    'a_10c',
    'a_129_a',
    'a_129_cbt',
    'a_129_d',
    'a_20g_30_ussr',
    'a_29_hudson',
    'a_4b',
    'a_4e_early',
    'a_4e_early_iaf',
    'a_4e_late_iaf',
    'a_4h',
    'a_4n',
    'a_5c',
    'a_6e_tram',
    'a_7d',
    'a_7e',
    'a_7e_thailand',
    'a_7k',
    'ab_205a_1',
    'ah_1f',
    'ah_1f_iaf',
    'ah_1g',
    'ah_1g_iaf',
    'ah_1q_iaf',
    'ah_1s',
    'ah_1s_early',
    'ah_1s_late',
    'ah_1w',
    'ah_1w_china',
    'ah_1z',
    'ah_2_rooivalk',
    'ah_60_iaf',
    'ah_64a',
    'ah_64a_greece_usa',
    'ah_64a_iaf',
    'ah_64a_peten',
    'ah_64a_peten_iaf',
    'ah_64d',
    'ah_64d_i_saraph',
    'ah_64d_japan',
    'ah_64d_netherlands',
    'ah_6m',
    'ah_mk1',
    'ahs',
    'aichi_e13a',
    'alpha_jet_a',
    'alpha_jet_a_thailand',
    'alpha_jet_e',
    'alpha_jet_th_phase_1',
    'am_1_mauler',
    'amx',
    'amx_a_1a_brazil',
    'ar_2',
    'arado-196a-3',
    'arado-196a-5',
    'arado-234',
    'arado-234c-3',
    'ariete',
    'attaker_fb1',
    'attaker_fb2',
    'av_8a',
    'av_8b_na',
    'av_8b_plus',
    'av_8b_plus_italy',
    'av_8c',
    'av_8s_late_thailand',
    'av_8s_thailand',
    'avenger_mk1',
    'b-17e',
    'b-17e_japan',
    'b-17e_late',
    'b-17g',
    'b-17g_iaf',
    'b-29',
    'b-29_france_killstreak',
    'b-29_germany_killstreak',
    'b-29_iaf_killstreak',
    'b-29_italy_killstreak',
    'b-29_japan_killstreak',
    'b-29_killstreak',
    'b-29_sweden_killstreak',
    'b-29_uk_killstreak',
    'b-57',
    'b-57b',
    'b5n2',
    'b6n1',
    'b6n2',
    'b6n2a',
    'b7a2',
    'b7a2_homare_23',
    'b_10b',
    'b_18a',
    'b_239_finland',
    'b_24d',
    'b_25j_1',
    'b_25j_20',
    'b_25j_30',
    'b_25j_30_china',
    'b_25j_30_france',
    'b_25j_30_vvs_ussr',
    'b_26b_c',
    'b_26c_france',
    'b_34',
    'b_48_firecrest',
    'ba_65_k14_l',
    'bb-1',
    'be_6',
    'beaufighter_mk1_40mm',
    'beaufighter_mk21',
    'beaufighter_mk6c',
    'beaufighter_mkx',
    'beaufort_mkviii',
    'bf-109a_1',
    'bf-109b_2',
    'bf-109c_1',
    'bf-109c_1_promo',
    'bf-109e-1',
    'bf-109e-3',
    'bf-109e-3_japan',
    'bf-109e-4',
    'bf-109e-7',
    'bf-109f-1',
    'bf-109f-2',
    'bf-109f-4',
    'bf-109f-4_hungary',
    'bf-109f-4_trop',
    'bf-109f-4_usa',
    'bf-109g-10',
    'bf-109g-14',
    'bf-109g-14as',
    'bf-109g-2',
    'bf-109g-2_finland',
    'bf-109g-2_hungary',
    'bf-109g-2_romania',
    'bf-109g-6',
    'bf-109g-6_erla_finland',
    'bf-109g-6_finland',
    'bf-109k-4',
    'bf-109z',
    'bf-110c-4',
    'bf-110c-6',
    'bf-110f-2',
    'bf-110g-2',
    'bf2c_1',
    'bf_110g_4',
    'bf_110g_4_hungary',
    'bi',
    'blenheim_mkiv',
    'bo_105cb2',
    'bo_105pah1',
    'bo_105pah1_a1',
    'boomerang_mki',
    'boomerang_mkii',
    'boston_mk_1',
    'br_20_dr',
    'br_20m_m1',
    'br_693_ab2',
    'breda_88',
    'brigand_b1',
    'btd-1',
    'buccaneer_s1',
    'buccaneer_s2',
    'buccaneer_s2b',
    'bv-138c-1',
    'bv-155b-1',
    'bv-238',
    'c-47',
    'canberra_bimk6',
    'canberra_bimk6_france_killstreak',
    'canberra_bimk6_germany_killstreak',
    'canberra_bimk6_iaf_killstreak',
    'canberra_bimk6_italy_killstreak',
    'canberra_bimk6_japan_killstreak',
    'canberra_bimk6_killstreak',
    'canberra_bimk6_sweden_killstreak',
    'canberra_bimk6_usa_killstreak',
    'canberra_bmk2',
    'caudron_cr714',
    'corsair_fmk2',
    'cr_32',
    'cr_32_bis',
    'cr_32_quater',
    'cw_21',
    'd3a1',
    'd4y1',
    'd4y2',
    'd4y3',
    'd_371',
    'd_371_hs9',
    'd_373',
    'd_500',
    'd_501',
    'd_510',
    'd_510c',
    'd_520',
    'd_520_france',
    'd_521',
    'db_3a_china',
    'db_3b',
    'db_7',
    'dh_110_sea_vixen',
    'do_17e_1',
    'do_17z_2',
    'do_17z_7',
    'do_217e_2',
    'do_217e_4',
    'do_217j_1',
    'do_217j_2',
    'do_217k_1',
    'do_217m_1',
    'do_217n_1',
    'do_217n_2',
    'do_335a_0',
    'do_335a_1',
    'do_335b_2',
    'douglas_a_1h',
    'douglas_ad_2',
    'douglas_ad_4',
    'douglas_ad_4_france',
    'douglas_ad_4na_france',
    'e7k2',
    'e8n2',
    'ef_2000_block_10',
    'ef_2000_fgr4',
    'ef_2000a',
    'er-2_ach30b_early',
    'er-2_ach30b_late',
    'er-2_m105_mv3',
    'er-2_m105_tat',
    'er-2_m105r_lu2b',
    'er-2_m105r_tat',
    'etndard_4m',
    'f-100a_china',
    'f-100d',
    'f-100d_france',
    'f-104a',
    'f-104a_china',
    'f-104c',
    'f-104g',
    'f-104g_belgium',
    'f-104g_china',
    'f-104g_italy',
    'f-104j',
    'f-104s',
    'f-104s_asa',
    'f-104s_cb',
    'f-105d',
    'f-4c',
    'f-4e',
    'f-4e_iaf',
    'f-4e_kurnass_2000',
    'f-4ej',
    'f-4ej_adtw',
    'f-4ej_kai',
    'f-4f',
    'f-4f_kws_lv',
    'f-4f_late',
    'f-4j',
    'f-4jk',
    'f-4k',
    'f-4m_fgr2',
    'f-4s',
    'f-5a',
    'f-5a_china',
    'f-5a_thailand',
    'f-5ag_norway',
    'f-5c',
    'f-5e',
    'f-5e_aidc',
    'f-5e_fcu_thailand',
    'f-5t_thailand',
    'f-80',
    'f-80a',
    'f-82e',
    'f-84b',
    'f-84f',
    'f-84f_france',
    'f-84f_germany',
    'f-84f_iaf',
    'f-84f_israel_iaf',
    'f-84f_italy',
    'f-84g-31-re_china',
    'f-84g',
    'f-84g_china',
    'f-84g_france',
    'f-84g_italy',
    'f-84g_thailand',
    'f-86_canadair_german',
    'f-86_cl_13_mk4_italy',
    'f-86_cl_13b_mk6',
    'f-86a-5',
    'f-86f-2',
    'f-86f-25',
    'f-86f-30_china',
    'f-86f-30_japan',
    'f-86f-35',
    'f-86f-40_china',
    'f-86f-40_japan',
    'f-86f-40_japan_blue_impulse',
    'f-86k_late',
    'f-86k_late_german',
    'f-86k_late_italy',
    'f-89b',
    'f-89d',
    'f-8e',
    'f-8e_fn',
    'f1',
    'f11f_1_late',
    'f1m2',
    'f2a-1',
    'f2a-1_thach',
    'f2a-3',
    'f2g-1',
    'f2h-2',
    'f3d_1',
    'f3f-2',
    'f3f-2_galer',
    'f3h-2',
    'f4d_1',
    'f4f-3',
    'f4f-4',
    'f4f-4_martlet_mk4',
    'f4u-1a',
    'f4u-1a_japan',
    'f4u-1a_usmc',
    'f4u-1c',
    'f4u-1d',
    'f4u-4',
    'f4u-4b',
    'f4u-4b_vmf_214',
    'f4u-6_au-1',
    'f4u-7',
    'f6f-3',
    'f6f-5_france',
    'f6f-5n',
    'f6f-5n_france',
    'f7f1',
    'f7f3',
    'f8f1',
    'f8f1b',
    'f8f1b_france',
    'f8u-2',
    'f9f-2',
    'f9f-5',
    'f9f-8',
    'f_100f_china',
    'f_111a',
    'f_111c_raaf',
    'f_111f',
    'f_117',
    'f_14a_early',
    'f_14a_iriaf',
    'f_14b',
    'f_15a',
    'f_15a_iaf',
    'f_15c_baz_msip',
    'f_15c_msip2',
    'f_15e',
    'f_15i_raam',
    'f_15j',
    'f_15j_kai',
    'f_16a_block_10',
    'f_16a_block_10_iaf',
    'f_16a_block_10_netz_mod',
    'f_16a_block_15_adf',
    'f_16a_block_15_adf_italy',
    'f_16a_block_15_belgium',
    'f_16a_block_15_ocu_thailand',
    'f_16a_block_20_mlu',
    'f_16aj',
    'f_16am_block_15_mlu_belgium',
    'f_16c_block_40_barak_2',
    'f_16c_block_50',
    'f_16c_block_50_missile_test',
    'f_16d_block_40_barak_2',
    'f_16d_block_40_barak_2_missile_test',
    'f_20a',
    'f_222_2',
    'f_47n_25_re_china',
    'fa_18a',
    'fa_18c_early',
    'fa_18c_finland',
    'fa_18c_late',
    'fairey_3f_mk3b',
    'fau-1',
    'fc_20_bis',
    'ffa_p16',
    'ffvs_j22_a',
    'ffvs_j22_b',
    'fiat_cr42',
    'fiat_cr42_italy',
    'fiat_cr42_j11',
    'fiat_cr42_marcolin',
    'fiat_cr42_marcolin_italy',
    'fiat_g50_seria2',
    'fiat_g50_seria2_italy',
    'fiat_g50_seria7as',
    'fiat_g50_seria7as_italy',
    'fiat_g91_ps',
    'fiat_g91_r1',
    'fiat_g91_r3',
    'fiat_g91_r4',
    'fiat_g91_r4_german',
    'fiat_g91_y',
    'fiat_g91_ys',
    'firebrand_tf4',
    'firefly_mk1',
    'firefly_mk4_netherlands',
    'firefly_mk5',
    'fj_4b',
    'fj_4b_agm_12b',
    'fokker_d21_mod20',
    'fokker_d21_serie3_finland',
    'fokker_g1a',
    'fury_mk1',
    'fury_mk2',
    'fw-189a-1',
    'fw-190a-1',
    'fw-190a-4',
    'fw-190a-5',
    'fw-190a-5_cannons',
    'fw-190a-5_cannons_tutorial',
    'fw-190a-5_japan',
    'fw-190a-5_u2',
    'fw-190a-8',
    'fw-190a-8_france',
    'fw-190a-8_usa',
    'fw-190c',
    'fw-190d-12',
    'fw-190d-13',
    'fw-190d-9',
    'fw-190d-9_ussr',
    'fw-190f-8',
    'fw_190a_5_u14',
    'fw_200c_1',
    'g4m1',
    'g5n1',
    'g5n2',
    'g8n1',
    'g8n2',
    'g_55_serie1',
    'g_55_serie1_ss0',
    'g_55s',
    'g_56',
    'g_lynx',
    'gl_832',
    'gladiator_j8a',
    'gladiator_j8a_iacobi',
    'gladiator_mk1_belgium',
    'gladiator_mk1_china',
    'gladiator_mk2',
    'gladiator_mk2_france',
    'gladiator_mk2_navy',
    'gladiator_mk2_silver',
    'gladiator_mk2_tuck',
    'go229_v3',
    'h-75a-1_finland',
    'h-75a-1_france',
    'h-75a-1_france39',
    'h-75a-2_finland',
    'h-75a-2_france',
    'h-75a-2_luftwaffe',
    'h-75a-3_finland',
    'h-75a-3_france',
    'h-75a-3_france_vishy',
    'h-75a-4_finland',
    'h-75a-4_france',
    'h-75a-4_luftwaffe',
    'h-75a-4_raf',
    'h-75a-5',
    'h-75a-6',
    'h-75a-7',
    'h-75m',
    'h-75n',
    'h6k4',
    'h8k2',
    'h8k3',
    'h_34',
    'h_34_france',
    'halifax_mk3',
    'harrier_frs1',
    'harrier_frs1_early',
    'harrier_gr1',
    'harrier_gr3',
    'harrier_gr7',
    'harrier_t10',
    'hawk_iii',
    'he-111h-16_winter',
    'he-111h-2',
    'he-111h-6',
    'he-162a-1',
    'he-162a-2',
    'he-177a-3',
    'he-177a-5',
    'he51a1',
    'he51b1',
    'he51b_2w',
    'he51c1',
    'he51c1_late',
    'he_100d_1',
    'he_112a_0',
    'he_112b_0',
    'he_112b_1',
    'he_112b_1_italy',
    'he_112b_2',
    'he_112v_5',
    'he_115a_2_sweden',
    'he_115c_1',
    'he_219a_7',
    'hellcat_fmk1',
    'hkp2',
    'hkp3c',
    'hkp9a_cb2',
    'hkp9a_cb3_fc',
    'hornet_mk1',
    'hornet_mk3',
    'hp52_hampden_mk1_late',
    'hp52_hampden_tbmk1',
    'hp52_hampden_tbmk1_ussr_utk1',
    'hs-123a-1',
    'hs-123a-1_china',
    'hs-129b-2',
    'hs-129b-2_romania',
    'hs-129b-2_romania_italy',
    'hs-129b-3',
    'hudson_mk_v',
    'hunter_f1',
    'hunter_f50_sweden',
    'hunter_f58_switzerland',
    'hunter_f6',
    'hunter_f6_holland',
    'hunter_f9_rhodesia',
    'hurricane_mk1',
    'hurricane_mk1_late',
    'hurricane_mk1_late_ep',
    'hurricane_mk1_late_finland',
    'hurricane_mk1b',
    'hurricane_mk1c',
    'hurricane_mk4',
    'hurricanemkii',
    'hurricanemkii_ussr',
    'i-153_m62',
    'i-153_m62_china',
    'i-153_m62_zhukovskiy',
    'i-153p',
    'i-15_1934',
    'i-15_1935',
    'i-15_1935_moscow',
    'i-15bis',
    'i-15bis_china',
    'i-15bis_krasnolutsky',
    'i-16_chung_28',
    'i-16_type10',
    'i-16_type10_china',
    'i-16_type17_china',
    'i-16_type18',
    'i-16_type24',
    'i-16_type27',
    'i-16_type28',
    'i-16_type5',
    'i-16_type5_1935_china',
    'i_180',
    'i_180_event01',
    'i_180_event02',
    'i_180_event03',
    'i_180_event04',
    'i_185_m71_standard',
    'i_185_m82',
    'i_225',
    'i_29',
    'iar_316b',
    'iar_81c',
    'iar_93b',
    'il-10',
    'il-10_1946',
    'il-10_1946_china',
    'il-10_1946_hungary',
    'il-2i',
    'il-2m',
    'il-2m_mstitel',
    'il-4',
    'il_28',
    'il_28_china',
    'il_28_china_killstreak',
    'il_28_german',
    'il_28_hungary',
    'il_28_killstreak',
    'il_28sh',
    'il_2_1941',
    'il_2_1942_luftwaffe',
    'il_2_37_1943',
    'il_2_m82',
    'il_2m_1943',
    'il_8_1944',
    'intruder_mk_1',
    'itp_m1',
    'j1n1_mod11_early',
    'j2m2',
    'j2m3',
    'j2m4_kai',
    'j2m5',
    'j2m5_30mm',
    'j5n1',
    'j6b',
    'j6k1',
    'j7w1',
    'j8m1',
    'j9_early',
    'j_10a',
    'j_11',
    'j_11a',
    'j_11b',
    'j_7_mk2',
    'j_7d',
    'j_7e',
    'j_8b',
    'j_8f',
    'j_8f_missile_test',
    'jaguar_a',
    'jaguar_a_germany_killstreak',
    'jaguar_a_iaf_killstreak',
    'jaguar_a_italy_killstreak',
    'jaguar_a_japan_killstreak',
    'jaguar_a_killstreak',
    'jaguar_a_sweden_killstreak',
    'jaguar_a_uk_killstreak',
    'jaguar_a_usa_killstreak',
    'jaguar_e',
    'jaguar_gr1',
    'jaguar_gr1a',
    'jaguar_is',
    'javelin_fmk9',
    'jf_17',
    'jh_7a',
    'ju-188a-2',
    'ju-288c',
    'ju-388j',
    'ju-52',
    'ju-87b-2',
    'ju-87d-3',
    'ju-87d-3_italy',
    'ju-87d-5',
    'ju-87g_1',
    'ju-87g_2',
    'ju-87r-2',
    'ju-87r-2_italy',
    'ju-87r-2_snake',
    'ju-88a-1',
    'ju-88a-4',
    'ju-88a-4_finland',
    'ju-88c-6',
    'ka_29',
    'ka_50',
    'ka_52',
    'kfir_c10_colombia',
    'kfir_c2',
    'kfir_c7',
    'kfir_canard',
    'ki-27_otsu',
    'ki-27_otsu_china',
    'ki-27_otsu_ep',
    'ki-45_hei',
    'ki-45_hei_tei',
    'ki-45_hei_tei_china',
    'ki-45_ko',
    'ki-45_ko_tei',
    'ki-45_otsu',
    'ki-45_tei',
    'ki-49_1',
    'ki-49_2a',
    'ki-49_2b',
    'ki-49_2b_late',
    'ki-83',
    'ki-96',
    'ki_100_2',
    'ki_100_early',
    'ki_102_otsu',
    'ki_108',
    'ki_109',
    'ki_10_1',
    'ki_10_1_commander',
    'ki_10_2',
    'ki_10_2_commander',
    'ki_21_1hei',
    'ki_21_1ko',
    'ki_32',
    'ki_43_1',
    'ki_43_2',
    'ki_43_2_late',
    'ki_43_3_ko',
    'ki_43_3_otsu',
    'ki_44_1',
    'ki_44_1_ep',
    'ki_44_2_hei',
    'ki_44_2_hei_china',
    'ki_44_2_otsu',
    'ki_48_2_otsu',
    'ki_48_2_otsu_event',
    'ki_61_1a_hei',
    'ki_61_1a_hei_ep',
    'ki_61_1a_ko',
    'ki_61_1a_otsu',
    'ki_61_1a_otsu_china',
    'ki_61_1a_otsu_usa',
    'ki_61_1a_tei',
    'ki_61_2_early',
    'ki_67_1_ko',
    'ki_67_1_otsu',
    'ki_84_hei',
    'ki_84_ko',
    'ki_84_ko_china',
    'ki_84_otsu',
    'ki_87',
    'ki_94_2',
    'kitsuka',
    'kor_1',
    'la-11',
    'la-11_china',
    'la-15',
    'la-5_type37_early',
    'la-5_type39',
    'la-5fn',
    'la-5fn_luftwaffe',
    'la-7',
    'la-7_dolgushin',
    'la-7b-20',
    'la-9',
    'la-9_china',
    'la_174',
    'la_200_toriy',
    'lagg-3-1',
    'lagg-3-11',
    'lagg-3-23',
    'lagg-3-29',
    'lagg-3-34',
    'lagg-3-35',
    'lagg-3-4',
    'lagg-3-66',
    'lagg-3-8',
    'lagg-i-301',
    'lancaster_mk1',
    'lancaster_mk3',
    'lancaster_mr7_france',
    'late_298d',
    'leo_451_early',
    'leo_451_late',
    'li-2',
    'lightning_f53',
    'lightning_f6',
    'lincoln_b2',
    'loire_130',
    'lynx_ah_mk1',
    'martin_139wc',
    'maryland_mk1_france',
    'mb_151c1',
    'mb_152c1',
    'mb_157',
    'mb_162',
    'mb_174_a3',
    'mb_175t',
    'mb_5',
    'mbr-2',
    'mc-202',
    'mc-202_d',
    'mc-202_ec',
    'mc-202_italy',
    'mc-205_n2',
    'mc-205_serie1',
    'mc-205_serie3',
    'mc200_serie3',
    'mc200_serie3_italy',
    'mc200_serie7',
    'mc200_serie7_italy',
    'md_450b_barougan',
    'md_450b_ouragan',
    'md_450b_ouragan_iaf',
    'md_452_mystere_2a',
    'md_452_mystere_2c_preproduction',
    'md_454_mystere_4a',
    'md_454_mystere_4a_iaf',
    'md_460',
    'md_460_saar',
    'md_460_sambad',
    'md_460_usa',
    'md_460_yt_cup_2019',
    'md_500_tow_late',
    'me-163b-0',
    'me-163b',
    'me-262a-1a',
    'me-262a-1a_early',
    'me-262a-1a_u4',
    'me-262a-2a',
    'me-262a1_u1',
    'me-262c-1a',
    'me-262c-2b',
    'me-410a-1',
    'me-410a-1_u2',
    'me-410a-1_u4',
    'me-410b-1',
    'me-410b-1_u2',
    'me-410b-2_u4',
    'me-410b-6_r3',
    'me_264',
    'meteor_fmk3',
    'meteor_fmk3_navy',
    'meteor_fmk4_lw',
    'meteor_fmk4_sw',
    'meteor_fmk8',
    'meteor_fmk8_belgium',
    'meteor_fmk8_iaf',
    'meteor_fmk8_reaper',
    'meteor_nfmk13',
    'mh_60l_dap',
    'mi_24a',
    'mi_24d',
    'mi_24d_hungary',
    'mi_24p',
    'mi_24p_german',
    'mi_24p_german_hfs80',
    'mi_24p_hungary',
    'mi_24v',
    'mi_24v_hungary',
    'mi_28a_sweden',
    'mi_28n',
    'mi_28nm',
    'mi_35m',
    'mi_35m_pakistan',
    'mi_4av',
    'mi_8amtsh',
    'mi_8amtsh_vn',
    'mi_8tb',
    'mi_8tv',
    'mig-15',
    'mig-15_ns23',
    'mig-15bis_ish',
    'mig-15bis_nr23_china',
    'mig-15bis_nr23_german',
    'mig-15bis_nr23_hungary',
    'mig-15bis_ns23',
    'mig-15bis_ns23_china',
    'mig-17',
    'mig-17_china',
    'mig-17_cuba',
    'mig-17_f5',
    'mig-17p_lim_5p',
    'mig-17pf_hungary',
    'mig-19j_6a',
    'mig-19pt',
    'mig-19s',
    'mig-21_bis',
    'mig-21_bis_lazur',
    'mig-21_bis_sau',
    'mig-21_bis_sau_hungary',
    'mig-21_bison',
    'mig-21_f13',
    'mig-21_mf',
    'mig-21_mf_hungary',
    'mig-21_pfm',
    'mig-21_s',
    'mig-21_smt',
    'mig-21_sps_k',
    'mig-9',
    'mig-9_china',
    'mig-9_late_china',
    'mig-9_ussr',
    'mig_21_bis_finland',
    'mig_23bn',
    'mig_23m',
    'mig_23mf_germany',
    'mig_23mf_hungary',
    'mig_23ml',
    'mig_23mla',
    'mig_23mld',
    'mig_27k',
    'mig_27m',
    'mig_29_9_12_germany',
    'mig_29_9_12b_hungary',
    'mig_29_9_12g',
    'mig_29_9_13',
    'mig_29smt_9_19',
    'mig_29smt_9_19_missile_test',
    'mig_3_series_1_15',
    'mig_3_series_1_15_bk_pod',
    'mig_3_series_34',
    'mirage_2000_5ei',
    'mirage_2000_5f',
    'mirage_2000_5f_missile_test',
    'mirage_2000c_s4',
    'mirage_2000c_s5',
    'mirage_2000d_r1',
    'mirage_2000d_rmv',
    'mirage_3c',
    'mirage_3cj',
    'mirage_3e',
    'mirage_4000',
    'mirage_5ba',
    'mirage_5f',
    'mirage_f1c',
    'mirage_f1c_200',
    'mirage_f1ct',
    'mirage_milan',
    'morko_morane',
    'mosquito_fb_mk18',
    'mosquito_fb_mk26_china',
    'mosquito_fb_mk6',
    'ms_405c1',
    'ms_406c1',
    'ms_410c1',
    'n1k1_ja',
    'n1k1_kyuofu',
    'n1k2_j',
    'n1k2_jko',
    'nc_223_3',
    'nesher',
    'nimrod_mk1',
    'nimrod_mk2',
    'o3u_1',
    'oh_58d',
    'oh_58d_china',
    'os2u_1',
    'os2u_1_naval',
    'os2u_3',
    'osprey_mk4',
    'p-26a_33',
    'p-26a_34',
    'p-26a_34_m2',
    'p-26a_35',
    'p-26b_35',
    'p-36a',
    'p-36a_brown',
    'p-36a_rasmussen',
    'p-36c',
    'p-36c_rb',
    'p-36g',
    'p-38e',
    'p-38g',
    'p-38g_metal',
    'p-38j',
    'p-38j_marge',
    'p-38k',
    'p-38l',
    'p-38l_1_china_rocaf',
    'p-39k_1',
    'p-39n',
    'p-39n_su',
    'p-39q_15',
    'p-39q_25_france',
    'p-39q_5',
    'p-400',
    'p-40c',
    'p-40c_china',
    'p-40e',
    'p-40e_china',
    'p-40e_td',
    'p-40e_ussr',
    'p-40f-5_france_ep',
    'p-40f_10',
    'p-43a-1',
    'p-43a-1_china',
    'p-47d-28',
    'p-47d',
    'p-47d_16_re_germany',
    'p-47d_22_re',
    'p-47d_22_re_france',
    'p-47d_23_ra_china_rocaf',
    'p-47d_23_re',
    'p-47d_30_china',
    'p-47d_30_italy',
    'p-47d_luftwaffe',
    'p-47d_ussr',
    'p-47m-1-re',
    'p-47m-1-re_boxted',
    'p-47n-15',
    'p-51_a-36',
    'p-51_mk1',
    'p-51_mk1a_usaaf',
    'p-51a_tl',
    'p-51b',
    'p-51b_7_sweden',
    'p-51c-10-nt',
    'p-51c-10_france',
    'p-51c-11-nt_china',
    'p-51c-11-nt_japan',
    'p-51d-10',
    'p-51d-20-na',
    'p-51d-20-na_iaf',
    'p-51d-20-na_j26',
    'p-51d-20_china',
    'p-51d-30_usaaf_korea',
    'p-51d-5',
    'p-51h-5_na',
    'p-51k',
    'p-59a',
    'p-61a_1',
    'p-61c_1',
    'p-63a-10',
    'p-63a-10_ussr',
    'p-63a-5',
    'p-63a-5_ussr',
    'p-63c-5',
    'p-63c-5_france',
    'p-63c-5_kingcobra_animal_version',
    'p-63c-5_ussr',
    'p-66',
    'p1y1_mod11',
    'p1y1_mod11_china',
    'p_108a_serie2',
    'p_108b_serie1',
    'p_108b_serie2',
    'pb4y-2',
    'pb4y-2_china',
    'pb4y-2_france',
    'pbj_1h',
    'pbj_1j',
    'pbj_1j_1',
    'pbm_1',
    'pbm_3',
    'pbm_5a',
    'pby-5',
    'pby-5a',
    'pby-5a_late_france',
    'pby-5a_raf',
    'pby-5a_ussr',
    'pe-2-1',
    'pe-2-110',
    'pe-2-205',
    'pe-2-31',
    'pe-2-359',
    'pe-2-359_china',
    'pe-2-83',
    'pe-3',
    'pe-3_bis',
    'pe-3_early',
    'pe-8_m82',
    'po-2',
    'po-2_nw',
    'po-2m',
    'po_2op_event',
    'potez_630',
    'potez_631',
    'potez_633',
    'pv_2d',
    'pyorremyrsky',
    'q_5_early',
    'q_5a',
    'q_5l',
    'r2y2_kai',
    'r2y2_v1',
    'r2y2_v2',
    'rafale_c_f3',
    're_2000_ga',
    're_2000_ga_ep',
    're_2000_int',
    're_2000_j20',
    're_2001_cb',
    're_2001_cn',
    're_2001_serie1',
    're_2001_serie1_ep',
    're_2002_early',
    're_2005_serie0',
    'ro_43',
    'ro_44',
    'ro_57_quadriarma',
    's_199',
    's_81_ar125',
    'sa_313b',
    'sa_313b_france',
    'sa_316b',
    'sa_341f',
    'sa_342l_china',
    'sa_342m',
    'saab_105g',
    'saab_105oe',
    'saab_a21a_3',
    'saab_a21rb',
    'saab_a32a',
    'saab_a32a_red_adam',
    'saab_aj37',
    'saab_ajs37',
    'saab_b17a',
    'saab_b17b',
    'saab_b17bs',
    'saab_b18a',
    'saab_b18b',
    'saab_b3c',
    'saab_j21a_1',
    'saab_j21a_2',
    'saab_j21ra',
    'saab_j29a',
    'saab_j29b',
    'saab_j29d',
    'saab_j29f',
    'saab_j32b',
    'saab_j35a',
    'saab_j35d',
    'saab_j35xs',
    'saab_ja37',
    'saab_ja37d',
    'saab_ja37di',
    'saab_ja37di_f21',
    'saab_jas39a',
    'saab_jas39c',
    'saab_jas39c_hungary',
    'saab_jas39c_south_africa',
    'saab_jas39c_south_africa_missile_test',
    'saab_jas39c_thailand',
    'saab_sk60b',
    'saab_t18b_1',
    'saab_t18b_2',
    'sagittario_2',
    'sb2c_1c',
    'sb2c_4',
    'sb2c_5_france',
    'sb2c_5_thailand',
    'sb2u-2',
    'sb2u-3',
    'sb_2m_100',
    'sb_2m_100a',
    'sb_2m_100a_spain',
    'sb_2m_103_mv3',
    'sb_2m_103c',
    'sb_2m_103u',
    'sb_2m_103u_china',
    'sb_2m_103u_mv3',
    'sb_2m_105',
    'sbd-3',
    'scimitar_f1',
    'scout_ah_mk1',
    'sea_fury_fb11',
    'sea_fury_fb51',
    'sea_harrier_fa2',
    'sea_hawk_fga50_netherlands',
    'sea_hawk_fga6',
    'sea_hawk_mk100',
    'sea_venom_faw20',
    'seafire_fr47',
    'seafire_mk17',
    'seafire_mk3',
    'seafire_mk3_france',
    'shackleton_mr_mk_2',
    'sm_79_1936',
    'sm_79_1936_italy',
    'sm_79_1937',
    'sm_79_1937_italy',
    'sm_79_1939',
    'sm_79_1939_italy',
    'sm_79_1941',
    'sm_79_1941_italy',
    'sm_79_1942',
    'sm_79_1942_italy',
    'sm_79_1943',
    'sm_79_1943_italy',
    'sm_79_iar',
    'sm_79_iar_italy',
    'sm_91',
    'sm_92',
    'so_4050_vautour_2a',
    'so_4050_vautour_2a_iaf',
    'so_4050_vautour_2a_israel_iaf',
    'so_4050_vautour_2b',
    'so_4050_vautour_2n',
    'so_4050_vautour_2n_iaf',
    'so_4050_vautour_2n_late',
    'so_8000_narval',
    'soc_1',
    'spitfire_f22',
    'spitfire_f24',
    'spitfire_fr_mk14e',
    'spitfire_fr_mk14e_belgium',
    'spitfire_ix',
    'spitfire_ix_early',
    'spitfire_ix_plagis',
    'spitfire_ix_tutorial',
    'spitfire_ix_usa',
    'spitfire_ix_ussr',
    'spitfire_lf_mk9e_iaf',
    'spitfire_lf_mk9e_weisman',
    'spitfire_mk1',
    'spitfire_mk14c',
    'spitfire_mk14e',
    'spitfire_mk18e',
    'spitfire_mk5b',
    'spitfire_mk5b_italy',
    'spitfire_mk5b_notrop',
    'spitfire_mk5c',
    'spitfire_mk5c_notrop',
    'spitfire_mk9b',
    'spitfire_mk9c_4cannons',
    'spitfire_mk9c_iaf',
    'spitfire_xvi',
    'spitfiremkii',
    'spitfiremkiia',
    'spitfiremkiia_ep',
    'stirling_mk1',
    'stirling_mk3',
    'strikemaster_mk88',
    'su-11',
    'su-2_m82',
    'su-2_mv5',
    'su-2_tss1',
    'su-6_am42',
    'su-6_m71',
    'su-7b',
    'su-7bkl',
    'su-7bkl_china_killstreak',
    'su-7bkl_killstreak',
    'su-7bmk',
    'su-8',
    'su-9',
    'su_17m2',
    'su_17m4',
    'su_22m3',
    'su_22m3_hungary',
    'su_22m4',
    'su_22m4_de_wtd61',
    'su_22um3k',
    'su_24m',
    'su_25',
    'su_25_558arz',
    'su_25k',
    'su_25sm3',
    'su_25t',
    'su_25tm',
    'su_27',
    'su_27sm',
    'su_30sm',
    'su_33',
    'su_34',
    'su_6_single',
    'sunderland_mk3a',
    'sunderland_mk5',
    'super_etendard_97',
    'super_hind_mk3',
    'swift_f1',
    'swift_f7',
    'swordfish_mk1',
    'swordfish_mk2',
    't2',
    't2_early',
    't_129_atak',
    'ta-152c',
    'ta-152h-1',
    'ta_154a_1',
    'tandem_mai',
    'tb_3_m17_32',
    'tbd-1_1938',
    'tbf-1c',
    'tempest_mk2',
    'tempest_mkv',
    'tempest_mkv_luftwaffe',
    'tempest_mkv_vikkers',
    'thunderbolt_mk1',
    'tiger_hac_france',
    'tiger_had_block2_france',
    'tiger_had_france',
    'tiger_had_spain',
    'tiger_hap_france',
    'tiger_uht',
    'tis_ma',
    'tornado_adv',
    'tornado_f3',
    'tornado_f3_late',
    'tornado_gr1',
    'tornado_gr4',
    'tornado_ids_de_assta1',
    'tornado_ids_de_mfg',
    'tornado_ids_de_wtd61',
    'tornado_ids_it',
    'tornado_ids_it_mod95',
    'tornado_ids_it_ret8',
    'tu-1',
    'tu-2',
    'tu-2_early',
    'tu-2_postwar',
    'tu-2_postwar_china',
    'tu-2_postwar_late',
    'tu-2_postwar_late_hungary',
    'tu_14t',
    'tu_4',
    'tu_4_china',
    'tu_4_china_killstreak',
    'tu_4_killstreak',
    'typhoon_mk1a',
    'typhoon_mk1b',
    'typhoon_mk1b_late',
    'uav_quadcopter',
    'ucav_mq_1_predator',
    'ucav_mq_1_predator_france_killstreak',
    'ucav_mq_1_predator_germany_killstreak',
    'ucav_mq_1_predator_iaf_killstreak',
    'ucav_mq_1_predator_italy_killstreak',
    'ucav_mq_1_predator_japan_killstreak',
    'ucav_mq_1_predator_sweden_killstreak',
    'ucav_mq_1_predator_uk_killstreak',
    'ucav_mq_1_predator_usa_killstreak',
    'ucav_orion',
    'ucav_orion_killstreak',
    'ucav_recon_micro',
    'ucav_recon_micro_flir',
    'ucav_wing_loong_i',
    'ucav_wing_loong_i_killstreak',
    'uh_1b',
    'uh_1b_japan',
    'uh_1c',
    'uh_1c_xm_30',
    'uh_1d',
    'v_11g',
    'v_12d',
    'v_156_b1',
    'v_156_f',
    'vampire_fb5',
    'vampire_fb52_finland',
    'vampire_fb52a_italy',
    'vampire_fb5_j28b',
    'vb_10_02',
    'vb_10c1',
    'venom_fb4',
    'vg_33',
    'vl_myrsky_2_late',
    'walrus_mk1',
    'wasp_has_mk1',
    'wellington_mk10',
    'wellington_mk1c',
    'wellington_mk1c_late',
    'wellington_mk1c_luftwaffe',
    'wellington_mk3',
    'wessex_mk5',
    'whirlwind_mk1',
    'whirlwind_p9',
    'wirraway',
    'wyvern_s4',
    'xa_38',
    'xf5f',
    'xp-50',
    'xp-55',
    'yah_64',
    'yak-15',
    'yak-15_early',
    'yak-17',
    'yak-1_early',
    'yak-1b',
    'yak-1b_luftwaffe',
    'yak-23',
    'yak-28b',
    'yak-3',
    'yak-30d',
    'yak-38',
    'yak-38m',
    'yak-3_eremin',
    'yak-3_france',
    'yak-3_vk107',
    'yak-3p',
    'yak-3t',
    'yak-3u',
    'yak-4',
    'yak-7b',
    'yak-9',
    'yak-9b',
    'yak-9k',
    'yak-9m',
    'yak-9p',
    'yak-9p_hungary',
    'yak-9t',
    'yak-9t_france',
    'yak-9u',
    'yak-9ut',
    'yak_141',
    'yak_2_kabb',
    'yp-38',
    'z_10',
    'z_1007_bis_serie3',
    'z_1007_bis_serie5',
    'z_11wa',
    'z_19',
    'z_19e',
    'z_9w',
    'z_9wa'
]

units_name = wt_datamine.WTUnitsName()

# Тело cvs файла fm_names_db.csv
cvs_name = []
# Тело cvs файла fm_data_db.csv
cvs_data = []

# Получить список файлов с расширением blkx из каталога dir_path
res = glob.glob('{}*.blkx'.format(flightmodels_path))
# Список файлов есть, пошли по нему
for file in res:
    # Нам нужно как короткое так и полное имя, дальше будет понятно зачем
    full_file_name = file
    short_file_name = file.replace(flightmodels_path, '')

    # Признак того, что надо обратботать файл, если массив is_process_file пустой то всегда истина
    is_process_file = not list_plane

    # Если массив не пуст то ищем имя файла без расширения в списке самолетов
    if not is_process_file:
        for plane in list_plane:
            is_process_file = short_file_name == '{}.blkx'.format(plane)
            if is_process_file:
                break

    # Если надо обработать файл
    if is_process_file:
        print(short_file_name)
        # Готовим для него строку
        cvs_row_name = {}
        cvs_row_data = {}
        # Открываем его, насчет закрытия не паримся, его закроет магия выхода за область видимиости
        with open(full_file_name, 'r') as file:
            main_data = json.load(file)

            # Заполняем информацию по наименованию самолета
            cvs_row_name['Name'] = short_file_name.replace('.blkx', '')

            if 'fmFile' in main_data:
                if isinstance(main_data['fmFile'], list):
                    cvs_row_name['FmName'] = main_data['fmFile'][1].replace('fm/', '').replace('.blk', '')
                else:
                    cvs_row_name['FmName'] = main_data['fmFile'].replace('fm/', '').replace('.blk', '')
            else:
                cvs_row_name['FmName'] = cvs_row_name['Name']

            if 'fightAiBehaviour' in main_data:
                if isinstance(main_data['fightAiBehaviour'], list):
                    cvs_row_name['Type'] = main_data['fightAiBehaviour'][0].replace('assault', 'strike')
                else:
                    cvs_row_name['Type'] = main_data['fightAiBehaviour'].replace('assault', 'strike')
            else:
                print(f'{short_file_name} - не определили тип самолета')
                cvs_row_name['Type'] = 'fighter'
            cvs_row_name['English'] = units_name[f'{cvs_row_name['Name']}_shop']

            # Добавлям в нашу строку для  CSV модель самолета
            cvs_row_data['Name'] = main_data['model']
            # Читаем из основго файла имя файла флайт модели, но меням расширение на blkx, вот я хз почему так.
            fm_file_name = '{}\\fm\\{}.blkx'.format(flightmodels_path, cvs_row_name['FmName'])

            with open(fm_file_name, 'r') as fm_file:
                # Прочитали данные из флайт модели
                fm_data = json.load(fm_file)
                if 'Length' in fm_data:
                    cvs_row_data['Length'] = fm_data['Length']
                else:
                    print(f'{short_file_name} - длину не нашли')
                    cvs_row_data['Length'] = 0

                if 'Aerodynamics' in fm_data and 'WingPlane' in fm_data['Aerodynamics'] and 'Span' in \
                        fm_data['Aerodynamics']['WingPlane']:
                    cvs_row_data['WingSpan'] = fm_data['Aerodynamics']['WingPlane']['Span']
                else:
                    if 'Wingspan' in fm_data:
                        cvs_row_data['WingSpan'] = fm_data['Wingspan']
                    else:
                        print(f'{short_file_name} - размах крыла не нашли')
                        cvs_row_data['WingSpan'] = 0

                if 'Aerodynamics' in fm_data and 'WingPlane' in fm_data['Aerodynamics'] and 'Areas' in \
                        fm_data['Aerodynamics']['WingPlane']:
                    cvs_row_data['WingArea'] = fm_data['Aerodynamics']['WingPlane']["Areas"]["LeftIn"] + \
                                               fm_data['Aerodynamics']['WingPlane']["Areas"]["LeftMid"] + \
                                               fm_data['Aerodynamics']['WingPlane']["Areas"]["LeftOut"] + \
                                               fm_data['Aerodynamics']['WingPlane']["Areas"]["RightIn"] + \
                                               fm_data['Aerodynamics']['WingPlane']["Areas"]["RightMid"] + \
                                               fm_data['Aerodynamics']['WingPlane']["Areas"]["RightOut"]
                else:
                    if 'Areas' in fm_data:
                        cvs_row_data['WingArea'] = fm_data["Areas"]["WingLeftIn"] + \
                                                   fm_data["Areas"]["WingLeftMid"] + \
                                                   fm_data["Areas"]["WingLeftOut"] + \
                                                   fm_data["Areas"]["WingRightIn"] + \
                                                   fm_data["Areas"]["WingRightMid"] + \
                                                   fm_data["Areas"]["WingRightOut"]
                    else:
                        print(f'{short_file_name} - площадь крыла не нашли не нашли')
                        cvs_row_data['WingArea'] = 0

                if 'Mass' in fm_data and 'EmptyMass' in fm_data['Mass']:
                    cvs_row_data['EmptyMass'] = int(fm_data['Mass']['EmptyMass'])
                else:
                    print(f'{short_file_name} - сухую массу не нашли')
                    cvs_row_data['EmptyMass'] = 0

                if 'Mass' in fm_data and 'MaxFuelMass0' in fm_data['Mass']:
                    cvs_row_data['MaxFuelMass'] = int(fm_data['Mass']['MaxFuelMass0'])
                else:
                    print(f'{short_file_name} - массу топлива не нашли')
                    cvs_row_data['MaxFuelMass'] = 0

                if 'Aerodynamics' in fm_data and 'WingPlane' in fm_data['Aerodynamics'] and 'Strength' in \
                        fm_data['Aerodynamics']['WingPlane']:
                    cvs_row_data['CritAirSpd'] = int(fm_data['Aerodynamics']['WingPlane']['Strength']['VNE'])
                    cvs_row_data['CritAirSpdMach'] = (fm_data['Aerodynamics']['WingPlane']['Strength']['MNE'])
                else:
                    if 'Vne' in fm_data:
                        cvs_row_data['CritAirSpd'] = int(fm_data['Vne'])
                    else:
                        print(f'{short_file_name} - критическую скорость в км/час не нашли')
                        cvs_row_data['CritAirSpd'] = 0

                    if 'VneMach' in fm_data:
                        cvs_row_data['CritAirSpdMach'] = (fm_data['VneMach'])
                    else:
                        print(f'{short_file_name} - критическую скорость в махах не нашли')
                        cvs_row_data['CritAirSpdMach'] = 0

                if 'Mass' in fm_data and 'GearDestructionIndSpeed' in fm_data['Mass']:
                    cvs_row_data['CritGearSpd'] = int(fm_data['Mass']['GearDestructionIndSpeed'])
                else:
                    print(f'{short_file_name} - скорость разрушения шасси не нашли')
                    cvs_row_data['CritGearSpd'] = 0

                if 'Aerodynamics' in fm_data and "FlapsAxis" in fm_data['Aerodynamics']:
                    if fm_data['Aerodynamics']["FlapsAxis"]["Combat"]["Presents"]:
                        cvs_row_data['CombatFlaps'] = int(fm_data['Aerodynamics']["FlapsAxis"]["Combat"]["Flaps"] * 100)
                    else:
                        cvs_row_data['CombatFlaps'] = int(0)

                    if fm_data['Aerodynamics']["FlapsAxis"]["Takeoff"]["Presents"]:
                        cvs_row_data['TakeoffFlaps'] = int(
                            fm_data['Aerodynamics']["FlapsAxis"]["Takeoff"]["Flaps"] * 100)
                    else:
                        cvs_row_data['TakeoffFlaps'] = int(0)
                else:
                    print(f'{short_file_name} - позиций закрылок не нашли')
                    cvs_row_data['CombatFlaps'] = int(0)
                    cvs_row_data['TakeoffFlaps'] = int(0)

                CritFlapsSpd = ''
                for i in range(0, 5):
                    if "Mass" in fm_data and f'FlapsDestructionIndSpeedP{i}' in fm_data["Mass"]:
                        if isinstance(fm_data["Mass"][f'FlapsDestructionIndSpeedP{i}'][0], float):
                            CritFlapsSpd = f'{CritFlapsSpd},{fm_data["Mass"][f'FlapsDestructionIndSpeedP{i}'][0]},{int(fm_data["Mass"][f'FlapsDestructionIndSpeedP{i}'][1])}'
                        else:
                            print(f'{short_file_name} - требуется уточнение по критическим скоростям')
                            CritFlapsSpd = f'{CritFlapsSpd},{fm_data["Mass"][f'FlapsDestructionIndSpeedP{i}'][0][0]},{int(fm_data["Mass"][f'FlapsDestructionIndSpeedP{i}'][0][1])}'
                    else:
                        print(f'{short_file_name} - требуется уточнение по критическим скоростям')
                        CritFlapsSpd = ''

                cvs_row_data['CritFlapsSpd'] = CritFlapsSpd

                if 'Aerodynamics' in fm_data and 'WingPlane' in fm_data['Aerodynamics'] and 'Strength' in \
                        fm_data['Aerodynamics']['WingPlane']:
                    cvs_row_data[
                        'CritWingOverload'] = f'{fm_data["Aerodynamics"]["WingPlane"]["Strength"]["CritOverload"][0]},{fm_data["Aerodynamics"]["WingPlane"]["Strength"]["CritOverload"][1]}'
                else:
                    if 'Mass' in fm_data and "WingCritOverload" in fm_data["Mass"]:
                        cvs_row_data[
                            'CritWingOverload'] = f'{fm_data["Mass"]["WingCritOverload"][0]},{fm_data["Mass"]["WingCritOverload"][1]}'
                    else:
                        print(f'{short_file_name} - скорость слома крыла не нашли')
                        cvs_row_data['CritWingOverload'] = 0

                cvs_row_data['NumEngines'] = int(0)
                if "Engine0" in fm_data:
                    cvs_row_data['NumEngines'] = cvs_row_data['NumEngines'] + 1

                if "Engine1" in fm_data:
                    cvs_row_data['NumEngines'] = cvs_row_data['NumEngines'] + 1

                if "EngineType0" in fm_data:
                    cvs_row_data[
                        'RPM'] = f'{int(fm_data["EngineType0"]["Main"]["RPMMin"])},{int(fm_data["EngineType0"]["Main"]["RPMAfterburner"])},{int(fm_data["EngineType0"]["Main"]["RPMMaxAllowed"])}'
                else:
                    print(f'{short_file_name} - обороты двигателя не нашли')
                    cvs_row_data['RPM'] = int(0)

                if "Mass" in fm_data and "MaxNitro" in fm_data["Mass"]:
                    cvs_row_data['MaxNitro'] = fm_data["Mass"]["MaxNitro"]
                else:
                    print(f'{short_file_name} - нитро не нашли')
                    cvs_row_data['MaxNitro'] = int(0)

                if "EngineType0" in fm_data:
                    cvs_row_data['NitroConsum'] = fm_data["EngineType0"]["Afterburner"]["NitroConsumption"]
                else:
                    print(f'{short_file_name} - форсаж на закисии озота не нашли')
                    cvs_row_data['NitroConsum'] = int(0)

                if 'Aerodynamics' in fm_data and 'WingPlane' in fm_data['Aerodynamics'] and 'FlapsPolar0' in \
                        fm_data['Aerodynamics']['WingPlane'] and 'Aerodynamics' in fm_data and 'WingPlane' in fm_data[
                    'Aerodynamics'] and 'FlapsPolar1' in fm_data['Aerodynamics']['WingPlane']:
                    cvs_row_data[
                        'CritAoA'] = f'{int(fm_data["Aerodynamics"]["WingPlane"]["FlapsPolar0"]["alphaCritLow"])},{int(fm_data["Aerodynamics"]["WingPlane"]["FlapsPolar1"]["alphaCritHigh"])},{int(fm_data["Aerodynamics"]["WingPlane"]["FlapsPolar1"]["alphaCritLow"])}'
                else:
                    if 'Aerodynamics' in fm_data and 'NoFlaps' in fm_data['Aerodynamics']:
                        cvs_row_data[
                            'CritAoA'] = f'{int(fm_data["Aerodynamics"]["NoFlaps"]["alphaCritLow"])},{int(fm_data["Aerodynamics"]["FullFlaps"]["alphaCritHigh"])},{int(fm_data["Aerodynamics"]["FullFlaps"]["alphaCritLow"])}'
                    else:
                        if 'Aerodynamics' in fm_data and 'WingPlane' in fm_data['Aerodynamics'] and "Polar" in \
                                fm_data["Aerodynamics"]["WingPlane"]:
                            cvs_row_data[
                                'CritAoA'] = f'{int(fm_data["Aerodynamics"]["WingPlane"]["Polar"]["NoFlaps"]["alphaCritLow"])},{int(fm_data["Aerodynamics"]["WingPlane"]["Polar"]["FullFlaps"]["alphaCritHigh"])},{int(fm_data["Aerodynamics"]["WingPlane"]["Polar"]["FullFlaps"]["alphaCritLow"])}'
                        else:
                            print(f'{short_file_name} - критические углы не нашли')
                            cvs_row_data['CritAoA'] = ''

        #
        ## Вынули АССОЦИАТИВНЫЙ масив с данными по массе. Там их много
        # mass = fm_data['Mass']
        # Выкинули нафиг .0 и занесли в нашу строку
        # cvs_row['Length'] = int(mass['Length'])

        # Добавили строку к нашему тельцу cvs файла
        cvs_name.append(cvs_row_name)
        cvs_data.append(cvs_row_data)

# Сохраняем все в файлы
with open('fm_names_db.csv', 'w', newline='', encoding='utf-8') as csvfile:
    # Это заголовки, они совпадают с ключами в нашем ассоциативном массиве с информацией о самолетоах
    fieldnames = ['Name', 'FmName', 'Type', 'English']
    # Магия что бы excel открыл файл нормально
    writer = csv.DictWriter(csvfile, dialect='excel', delimiter=';', fieldnames=fieldnames)
    # Записываем заголовок
    writer.writeheader()
    # Записываем тело
    for row in cvs_name:
        writer.writerow(row)

with open('fm_data_db.csv', 'w', newline='', encoding='utf-8') as csvfile:
    # Это заголовки, они совпадают с ключами в нашем ассоциативном массиве с информацией о самолетоах
    fieldnames = ['Name', 'Length', 'WingSpan', 'WingArea', 'EmptyMass', 'MaxFuelMass', 'CritAirSpd', 'CritAirSpdMach',
                  'CritGearSpd', 'CombatFlaps', 'TakeoffFlaps', 'CritFlapsSpd', 'CritWingOverload', 'NumEngines', 'RPM',
                  'MaxNitro', 'NitroConsum', 'CritAoA']
    # Магия что бы excel открыл файл нормально
    writer = csv.DictWriter(csvfile, dialect='excel', delimiter=';', fieldnames=fieldnames)
    # Записываем заголовок
    writer.writeheader()
    # Записываем тело
    for row in cvs_data:
        writer.writerow(row)
